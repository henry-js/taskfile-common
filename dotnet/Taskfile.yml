# ./.build/dotnet.yml
version: "3"

vars:
  SOLUTION_FILE: "{{.SOLUTION_FILE}}"
  CONFIGURATION: '{{.CONFIGURATION | default "Release"}}'
  OUTPUT_DIR: '{{.OUTPUT_DIR | default "dist"}}'
  NUGET_OUTPUT_DIR: "{{.OUTPUT_DIR}}/nuget"
tasks:
  # ... (clean, restore, build, test are unchanged) ...
  clean:
    desc: "Runs 'dotnet clean' on the solution"
    cmds:
      - dotnet clean "{{.SOLUTION_FILE}}"

  restore:
    desc: "Restores NuGet packages for the solution"
    cmds:
      - dotnet restore "{{.SOLUTION_FILE}}"

  build:
    desc: "Builds the solution in {{.CONFIGURATION}} configuration"
    deps: [restore]
    cmds:
      - dotnet build "{{.SOLUTION_FILE}}" -c {{.CONFIGURATION}} --no-restore

  test:
    desc: "Runs all tests in the solution"
    deps: [build]
    cmds:
      - dotnet test "{{.SOLUTION_FILE}}" --no-build

  # This task is specifically for publishing a runnable application's files
  publish-app:
    desc: "Publishes a runnable application to a directory"
    deps: [clean]
    vars:
      PROJECT_TO_PUBLISH: "{{.PROJECT_TO_PUBLISH}}"
      RID: "{{.RID}}"
      PUBLISH_DIR: "{{.OUTPUT_DIR}}/publish/{{.RID}}"
    cmds:
      - dotnet publish "src/{{.PROJECT_TO_PUBLISH}}" -c {{.CONFIGURATION}} -r {{.RID}} -o "{{.PUBLISH_DIR}}"
    preconditions:
      - sh: 'test -n "{{.PROJECT_TO_PUBLISH}}"'
        msg: "Cannot publish: PROJECT_TO_PUBLISH variable is not set."
      - sh: 'test -n "{{.RID}}"'
        msg: "Cannot publish: RID (Runtime Identifier) variable is not set."

  # This task is specifically for creating a NuGet package from a library
  pack-nuget:
    desc: "Packs the project as a NuGet package"
    deps: [test]
    vars:
      PROJECT_TO_PACK: "{{.PROJECT_TO_PACK}}"
    cmds:
      - dotnet pack "src/{{.PROJECT_TO_PACK}}" -c {{.CONFIGURATION}} --no-build -o {{.NUGET_OUTPUT_DIR}}

  push-nuget:
    desc: "Pushes the NuGet package to a feed"
    # This task requires these variables to be set in the environment
    vars:
      NUGET_PACKAGE_PATH: '{{.NUGET_OUTPUT_DIR}}/{{.PROJECT_TO_PACK | replace "csproj" "nupkg" | replace "/" "."}}'
      NUGET_API_KEY: "{{.NUGET_API_KEY}}"
      NUGET_SOURCE_URL: "{{.NUGET_SOURCE_URL}}"
    cmds:
      - >
        dotnet nuget push "{{.NUGET_PACKAGE_PATH}}"
        -k {{.NUGET_API_KEY}}
        -s {{.NUGET_SOURCE_URL}}
        --skip-duplicate
